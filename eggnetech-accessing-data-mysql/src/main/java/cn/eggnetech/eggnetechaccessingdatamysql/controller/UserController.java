package cn.eggnetech.eggnetechaccessingdatamysql.controller;

import cn.eggnetech.eggnetechaccessingdatamysql.entity.User;
import cn.eggnetech.eggnetechaccessingdatamysql.service.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

/**
 * @name:
 * @description: Created by Benny Zhou on 2020/3/17
 */
@Controller // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /user (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    /**
     * Adds a new user
     * @param name
     * @param email
     * @return
     */
    @PostMapping(path = "/add") // Map only POST Requests
    public @ResponseBody String addNewUser(@RequestParam String name, @RequestParam String email) {
        // @ResponseBody means thet returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET of POST request
        User user = new User();
        user.setName(name);
        user.setEmail(email);
        userRepository.save(user);
        return "Saved";
    }

    @PostMapping(path = "/del")
    public @ResponseBody String deleteById(@RequestParam String id) {
        userRepository.deleteById(Integer.parseInt(id));
        return "Deleted";
    }

    /**
     * Gets all the users
     * @return a JSON or XML with the users
     */
    @GetMapping(path = "/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        return userRepository.findAll();
    }
}
